2024. 6. 3. Modified misc_test to correspond to the redefinition of zClone. [test]
2024. 6. 3. Renamed zClone to zCloneMem, and redefined zClone to specify type of the memory to be allocated. [zeda_misc, zeda_string]
2024. 5.31. Removed test.sh. [test]
2024. 5.29. Changed the license from LGPL-3 to MIT license. [all]
2024. 5.29. Debugged zSInt and zSDouble. [zeda_string]
2024. 5.29. Mmodified the specification of zSToken to always return the pointer to the buffer for token. [zeda_string]
2024. 5.29. Debugged _zSString and zSTokenSkim. [zeda_string]
2024. 5.29. Renamed zTokenIsTag to zStrIsTag. [zeda_string, zeda_ztk]
2024. 5.29. Modified prototypes of zStrToUpper, zStrToLower, zSetDelimiter, zSetOperator, zIsIncludedChar, zStrIsHex, zFSkipIncludedChar, zSSkipIncludedChar, and zTokenIsTag. [zeda_string]
2024. 5.29. Changed types of zeda_delimiter_default, zeda_delimiter, zeda_operator_default, and respectively to const char pointers. [zeda_string]
2024. 5.29. Renamed zkeyident to zeda_key_ident. [zeda_string]
2024. 5.29. Renamed ztagbeginident and ztagendident to zeda_tag_begin_ident and zeda_tag_end_ident, respectively. [zeda_string]
2024. 5.29. Renamed zoperator_default and zoperator to zeda_operator_default and zeda_operator, respectively. [zeda_string]
2024. 5.29. Renamed zdelimiter_default and zdelimiter to zeda_delimiter_default and zeda_delimiter, respectively. [zeda_string]
2024. 5.29. Renamed znullstring to zeda_nullstring. [zeda_string]
2024. 5.19. Added zListDup. [list]
2024. 5.17. Added assert_clone in test/index_test.c. [test]
2024. 5.17. Added zIndexClone. [zeda_index]
2024. 5.13. Added DEPENDENCY in config.app. [app]
2024. 5.13. Added STD option in config.org, and modified zeda-makefile-gen not to set the default STD. [config, tools]
2024. 5.13. Modified zeda-makefile-gen to include config before libinfo. [tools]
2024. 5.13. Added app/config.app, and modified zeda-makefile-gen to include config.app when building app. [app, tools]
2024. 3.20. Debugged zGetSuffix to cast return value of strrchr. [zeda_string]
2024. 3.19. Modified specification of zGetSuffix to accept a constant pointer to a string. [zeda_string]
2024. 3.19. Modified ZTKInt and ZTKDouble to copy the current value in the ZTK parse tree to a buffer internally. [zeda_ztk]
2024. 3.19. Modified specifications of _zFileStackNew, zFileStackPush, ZTKKeyFieldListNew, ZTKTagFieldListNew, _ZTKParseTag, _ZTKParse, and ZTKParse to accept a constant pointer for strings. [zeda_ztk]
2024. 3.19. Modified specifications of zStrClone, zAddSuffix, and zOpenFile to accept a constant pointer for strings. [zeda_string]
2024. 3.19. Modified specification of zClone to accept a constant pointer for src. [zeda_misc]
2024. 3.19. Included iostream from zeda_defs.h. [zeda_defs]
2024. 3.15. Moved ZDECL_STRUCT, ZDECL_UNION, ZDEF_STRUCT, and ZDEF_UNION from zeda_misc to zeda_defs. [zeda_defs, zeda_misc]
2024. 3.15. Added ZDECL_STRUCT and ZDECL_UNION (thanks to Kenta Imanishi). [zeda_misc]
2024. 3.11. Renamed zIndexCopyNC to _zIndexCopyNC, and reimplemented zIndexCopyNC and zIndexCopy (thanks to Kenta Imanishi). [zeda_index]
2024. 3. 4. Added zFileCompare. [zeda_misc]
2024. 2.21. Added zUTFType and zFCheckUTFBOM. [zeda_string]
2024. 1. 3. Modified zAssert not to use assert but abort, and to colorize the output. [zeda_misc]
2023. 9.22. Added zeda-autotest, and modified zeda-makefile-gen to use it. [tools]
2023. 9.22. Modified zAssert to output messages to stderr. [zeda_misc]
2023. 9.18. Debugged zIndexCopyNC. [zeda_index]
2023. 9.18. Modified specification of zIndexInsertVal to accept maximum buffer size. [zeda_index, zeda_errmsg]
2023. 9.18. Modified specification of zIndexInsertVal. [zeda_index]
2023. 9.18. Added zIndexCopyNC and zIndexCopy. [zeda_index, zeda_errmsg]
2023. 9.18. Added zIndexRemoveVal and zIndexInsertVal. [zeda_index]
2023. 9.18. Added zIndexSort. [zeda_index]
2023. 9.18. Added zIndexBufNC and zIndexBuf. [zeda_index]
2023. 9.17. Added zIndexSizeNC and zIndexSize. [zeda_index]
2023. 8. 6. Modified rand_test.c in test (thanks to Daishi Kaneta). [test]
2023. 8. 1. Modified definition of zListClass. [zeda_list]
2023. 6.26. Modified some examples and tests (thanks to Daishi Kaneta). [example, test]
2023. 6.26. Added OS-dependent conditional branch around endian. [zeda_compat]
2023. 6.21. Separated config and libinfo, and modified zeda-makefile-gen to read them. [all]
2023. 6.20. Modified zeda-makefile-gen to apply project names with underscores to headerfiles and that with hyphens to config tools. [tools]
2023. 6.16. Modified zeda-deb-gen to replace underscore in the project name for hyphen in order to name the package in accordance with the rule. [tools]
2023. 6.16. Added -pg option to debug mode compilation of the library in zeda-makefile-gen. [tools]
2023. 6. 3. Added zArrayMove. [zeda_array]
2023. 6. 1. Modified zeda-makefile-gen to create zeda_export.h only when the file does not exist. [tools]
2023. 5.26. Debugged heap_test and name_test. [test]
2023. 5.26. Debugged zHeapClass. [zeda_tree]
2023. 5.24. Modified __DEF_WINDLL. [zeda_compat]
2023. 5.24. Removed __EXPORT for Windows DLL. [zeda_defs]
2023. 5.23. Added a case to define _DEFINED_BYTE. [zeda_compat, zeda_defs]
2023. 5.20. Abolished zStream. [zeda, zeda_stream]
2023. 5.20. Redefined ZDEF_STRUCT and ZDEF_UNION to export classes in C++ programings. [zeda_misc]
2023. 5.20. Added export_header case in zeda-makefile-gen, and modified src/makefile. [tools, src]
2023. 5.20. Modified definitions of ZEDA_WARN_INT_SHRTSIZ and ZEDA_WARN_LNG_SHRTSIZ to correctly print values of sizeof. [zeda_errmsg]
2023. 5.20. Modified zeda_defs.h to check if __STDC_VERSION__ is defined before seeing its version (thanks to Mr. Kenta Imanishi). [zeda_defs]
2023. 5.19. Modified zeda_compat.h to check _MSC_VER for MS C compiler. [zeda_compat]
2023. 5.19. Modified error message in _ZTKEvalKey and _ZTKEvalTag (thanks to Mr. Kenta Imanishi). [zeda_ztk]
2023. 5.17. Removed semicolon at the end of Z_NAMED_CLASS. [zeda_name]
2023. 5.16. Modified zRRTabClass and zTreeClass to accept METHOD_EXPORT. [zeda_rrtab, zeda_tree]
2023. 5.16. Replaced __EXPORT to __ZEDA_EXPORT. [all]
2023. 5.16. Modified src/makefile to automatically create zeda_export.h. [src]
2023. 5.16. Modified zeda-makefile-gen to define __(PROJNAME_CAPITAL)_BUILD_DLL__ for build of DLL on Windows. [tools]
2023. 5.12. Added a condition to detect Clang on Windows and include windows.h. [zeda_compat]
2023. 5.12. Conditionally branched inclusion of stdio.h, stdlib.h, and string.h to inclusion of cstdio, cstdlib, and cstring for C++ building. [zeda_defs]
2023. 5.12. Removed keyword public from Z_NAMED_CLASS macro. [zeda_name]
2023. 5.12. Renamed atox_c, atox, itoa, ftoa, itoa_fill, itoa_zerofill, and itoa_ordinal to zA2X_c, zA2X, zI2A, zF2A, zI2AFill, zI2AZeroFill, and zI2AOrdinal, respectively. [zeda_misc]
2023. 5. 7. Modified zeda-makefile-gen to generate a plain makefile. [tools]
2023. 3.29. Modified specifications of zQuickSort and zInsertSort. [zeda_array]
2023. 3.29. Modified zListClass (C++) to redefine size member as int types. [zeda_list]
2023. 3.28. Modified zArrayClass and zArray2Class to redefine size member as int types. [zeda_array, zeda_index, zeda_name]
2023. 3.28. Modified zeda-makefile-gen to create makefiles for C++ compilation. [tools]
2023. 3.28. Modified zeda-config-gen to create output for -lcpp option. [tools]
2023. 3.20. Modified zeda-makefile-gen to accept DEBUG and enable -g flag of gcc. [tools]
2023. 3.20. Added list_test in test/. [test]
2023. 3.14. Defined ZDEF_ALLOC_FUNCTION_PROTOTYPE and ZDEF_ALLOC_FUNCTION. [zeda_misc]
2023. 3.13. Modified zeda-makefile-gen to define __BUILD_DLL__ when copiling the library. [tools]
2023. 3.12. Reimplemented and renamed zToUpper and zToLower to zStrToUpper and zStrToLower, respectively. [zeda_misc]
2023. 3.12. Added zFComma and zComma. [zeda_misc]
2023. 3.12. Added zFEndl, and redefined zEndl. [zeda_misc]
2023. 3. 3. Modified definition of zListClass. [zeda_list]
2023. 3. 3. Added ZDEF_STRUCT and ZDEF_UNION. [zeda_misc]
2023. 3. 3. Modified definition of __EXPORT to export global variables. [zeda_compat, zeda_misc]
2023. 3. 3. Debugged misc_test. [test]
2023. 2.12. Added ztkdump. [app]
2023. 2.12. Modified ZTKFPrint. [zeda_ztk]
2023. 2. 2. Added ZTKKeyFieldSize. [zeda_ztk]
2023. 1.25. Modified zeda-chkdep to output dependency between deb packages correctly. [tools]
2023. 1. 6. Corrected the comment about the return value ofzRandInitMT and zRandInitSeedMT. [zeda_rand]
2023. 1. 6. Modified specification of zRandInitMT and zRandInitSeedMT to return the seed value. [zeda_rand]
2023. 1. 6. Added zRandInitSeedMT and reimplemented zRandInitMT. [zeda_rand]
2022.12.19. Redefined byte type as signed char. [zeda_defs]
2022. 9. 5. Modified specification of zXMLCheckAttrVal to accept the string to be compared as const char *. [zeda_xml]
2022. 9. 5. Modified specification of zXMLCheckAttrVal to accept the name of attribute as const char *. [zeda_xml]
2022. 9. 5. Modified specification of zXMLFindNodeElement to accept the name of element as const char *. [zeda_xml]
2022. 9. 5. Modified specification of zAddSuffix and zOpenFile to accept suffix as const char *. [zeda_string]
2022. 9. 5. Modified specification of zOpenFile to accept mode string as const char *. [zeda_string]
2022. 9. 5. Modified zNameFind to seek the list of names by an unsigned value. [zeda_name]
2022. 9. 5. Modified zName and zNameSet to automatically cast pointer type. [zeda_name]
2022. 9. 5. Modified zListItem to count the number of items by an unsigned value. [zeda_list]
2022. 9. 5. Modified the 'size' member of zListClass to be an unsigned value. [zeda_list]
2022. 9. 4. Corrected arithmetic of void pointers. [zeda_array]
2022. 9. 4. Corrected arithmetic of signed integer values. [zeda_string, zeda_array, zeda_binfile, zeda_csv, zeda_index]
2022. 9. 4. Added castings from const char * to char *. [zeda_string, zeda_ztk, zeda_csv]
2022. 9. 4. Added explicit castings from void *. [zeda_string, zeda_array]
2022. 9. 4. Modified definition around _DEFINED_INT8 and _DEFINED_UINT. [zeda_defs, zeda_compat]
2022. 9. 3. Removed register keyword. [zeda_bit, zeda_csv, zeda_index, zeda_list, zeda_misc, zeda_rand, zeda_string, zeda_ztk]
2022. 9. 3. Modified definition of the boolean type. [zeda_defs]
2022. 9. 3. Debugged definitions around int8_t. [zeda_compat, zeda_defs]
2022. 9. 3. Redefined INT_BIT by using __SIZEOF_INT__ if it exists. [zeda_defs]
2022. 9. 3. Modified zeda-makefile-gen to accept standards. [tools]
2022. 8.13. Added definitions related to endian. [zeda_compat]
2022. 8.13. Modified byte-fixed type definition for Windows/GNU C compatibility. [zeda_compat, zeda_defs]
2022. 8.13. Modified Windows compatibility for Borland C++ and Microsoft Visual C++. [zeda_compat]
2022. 8.13. Added assertion tests for INT_MAX and UINT_MAX. [test]
2022. 8.12. Debugged zIndexRemove. [zeda_index]
2022. 8.12. Added zIndexRemove. [zeda_index]
2022. 7.16. Added zInsertSort and zArrayInsertSort. [zeda_array]
2022. 3. 4. Added zGetDirFilename. [zeda_string]
2022. 2.21. Added message-echo in failure cases of tag/key evaluation. [zeda_ztk]
2021. 9.22. Debugged zeda-deb-gen. [tools]
2021. 8. 3. Modified zeda-deb-gen to set modes of directories as 755. [tools]
2021. 7.24. Added zGetBasenameDRC. [zeda_string]
2021. 7.24. Debugged zStrCopy. [zeda_string]
2021. 7.23. Moved __##node_t##BindParentChild to zHeadClassMethod. [zeda_tree]
2021. 7.13. Debugged node_t##AddComplete and node_t##AddHeap. [zeda_tree]
2021. 7.13. Added zTreeInit, zTreeDestroy, zTreeNodeAlloc, zTreeAddComplete, zTreeUpHeap, zTreeAddHeap, zTreeDownHeap, zTreeDeleteHeap, and zTreeHeapify. [zeda_tree]
2021. 7.13. Abolished node_t##NodeAddHeap and added definitions of node_t##AddComplete and node_t##UpHeap. [zeda_tree]
2021. 7.13. Added parent member in zTreeClass and modified definitions of node_t##DownHeap. [zeda_tree]
2021. 7.13. Defined zTreeIsEmpty, zTreeIsLeaf, _zTreeParentID and _zTreeInitHeapMask. [zeda_tree]
2021. 7.12. Modified zHeapClass to export node_t##Heapify. [zeda_tree]
2021. 7.12. Modified node_t##NodeAlloc and node_t##AddHeap to accept a pointer to a data to be stored. [zeda_tree]
2021. 7.11. Added node_t##IsLeaf, __##node_t##Heapify and node_t##Heapify. [zeda_tree]
2021. 7.11. Modified node_t##NodeAlloc and __##node_t##NodeAddHeap to store size of the partial tree. [zeda_tree]
2021. 7. 6. Debugged makefile in src (thanks to Naoki Wakisaka). [src]
2021. 7. 3. Reimplemented INT_MAX and UINT_MAX. [zeda_defs]
2021. 7. 3. Added zStrChar, zStrrChar and zStrCharNul. [zeda_errmsg, zeda_string]
2021. 6. 1. Abolished clean option in zeda-deb-gen. Modified zeda-deb-gen to add information about architecture, section, priority and dependencies. [tools]
2021. 6. 1. Abolished __uint32_t_defined and __uint64_t_defined. [zeda_defs]
2021. 6. 1. Modified zeda-makefile-gen to generate makefile for shared objects. [tools]
2021. 6. 1. Modified allclean.sh in example to skip directories without makefile. [example]
2021. 5.31. Added -l and -deb options to zeda-chkdep to abstract a list of dependent libraries. [tools]
2021. 5.31. Modified zeda-makefile-gen to enable dependency check by zeda-chkdep. [tools]
2021. 5.31. Defined __BYTE_ORDER in bit_test for Mac OS X (thanks to Michel Boudinot). [test]
2021. 5.31. Modified zeda_defs.h to replace WORDSIZE with __LP64__ and removed bits/wordsize.h (thanks to Michel Boudinot). [zeda_defs]
2021. 5.31. Added a check of __STDC_VERSION__ for size-fixed integer types. [zeda_defs]
2021. 5.30. Debugged zeda-deb-gen about the use of xargs. [tools]
2021. 5.30. Modified makefile for tools. [tools]
2021. 5.30. Modified zeda-makefile-gen to be quiet when *.c is not found in app/. [tools]
2021. 5.30. Added zeda-deb-gen. [tools]
2021. 5.30. Modified zeda-makefile-gen not to use -i option of xargs (thanks to Michel Boudinot). [tools]
2021. 5.16. Reflected changes of specifications of FInt and SInt. [zeda_errmsg, zeda_index, zeda_ztk]
2021. 5.16. Modified specification of FInt, SInt, FDouble and SDouble. [zeda_string]
2021. 5.15. Modified zeda-makefile-gen to use --cflags option. [tools]
2021. 5.15. Modified zeda-config-gen to generate correspondence to --cflags option. [tools]
2021. 5.15. Abolished node_t##AssignDataInit and node_t##AssignDataDestroy. [zeda_tree]
2021. 5.15. Modified zTreeClassMethod to accept initializer and destructor. [zeda_tree]
2021. 5.15. Modified specifications of zTreeClass and zTreeClassMethod. [zeda_tree]
2021. 5.15. Renamed node_t##DefDataInit and node_t##DefDataDestroy to node_t##AssignDataInit and node_t##AssignDataDestroy, respectively. [zeda_tree]
2021. 5.15. Modified zTreeClassMethod to export node_t##NodeAlloc. [zeda_tree]
2021. 5.15. Modified zTreeClass and zTreeClassMethod to define _##node_t##DataInit, _##node_t##DataDestroy, node_t##DefDataInit and node_t##DefDataDestroy. [zeda_tree]
2021. 5.15. Renamed zeda_heap.h to zeda_tree.h. [zeda, zeda_tree]
2021. 5.15. Redefined zHeapClass and zHeapClassMethod separately. [zeda_heap]
2021. 5.15. Renamed node_t##Add node_t##Delete to node_t##AddHeap and node_t##DeleteHeap, respectively. [zeda_heap]
2021. 5.15. Renamed node_t##MaskInit to node_t##InitHeapMask. [zeda_heap]
2021. 5.15. Renamed zHeapClass and zHeadClassMethod to zTreeClass and zTreeClassMethod, respectively. [zeda_heap]
2021. 5.12. Modified zListMove. [zeda_list]
2021. 5. 9. Added zCSVSkipField. [zeda_csv]
2021. 5. 9. Added zCSVGetIntN and zCSVGetDoubleN. [zeda_csv]
2021. 5. 9. Modified specifications of zCSVGetInt and zCSVGetDouble. [zeda_csv]
2021. 5. 8. Added selective -ansi option to zeda-makefile-gen. [tools]
2021. 5. 8. Created zeda-makefile-gen and applied it to makefile in app/. [tools, app]
2021. 5. 7. Modified makefile. [zeda]
2021. 5. 7. Moved zeda-chkdep and zeda-config-gen to tools/, and modified makefiles. [zeda, app, tools]
2021. 5. 6. Added ZTKParseFP. [zeda_ztk]
2021. 5. 6. Added ZTKRewind. [zeda_ztk]
2021. 5. 6. Renamed ZTKParse to _ZTKParse, and newly added ZTKParse. [zeda_ztk]
2021. 5. 6. Modified specification of zFileStack. [zeda_ztk]
2021. 5. 2. Modified zIndexCreateFromList. [zeda_index]
2021. 5. 2. Modified zIntListAdd. [zeda_list]
2021. 5. 2. Added zIndexCreateFromList. [zeda_errmsg, zeda_index]
2021. 5. 2. Added zIntListAdd. [zeda_list]
2021. 5. 1. Added zXMLAddNodeAttr and zXMLReplaceNodeAttr. [zeda_xml]
2021. 4.30. Included zeda_csv.h in zeda.h. [zeda]
2021. 4.29. Modified app/makefile. [app]
2021. 4.29. Defined __ZEDA_USE_LIBXML to enable/disable the use of libxml2. [makefile]
2021. 4.29. Included zeda_xml.h in zeda.h. [zeda]
2021. 4.29. Added zeda_xml. [zeda_xml]
2021. 4.29. Modified specification of zeda-config-gen. [app]
2021. 4.28. Modified _zSString. [zeda_string]
2021. 4.28. Added zSTokenSkim. [zeda_string]
2021. 4.28. Abolished zFCountTag, zTagFScan, zFCountKey and zFieldFScan. [zeda_string]
2021. 4.28. Abolished prototypes of static functions. [zeda_string]
2021. 4.19. Added zCSVGoToLine. [zeda_csv, zeda_errmsg]
2021. 4.19. Modified specification of zCSV to store file position indicators of all lines. [zeda_csv]
2021. 4.15. Added zeda_csv. [zeda_csv, zeda_errmsg]
2021. 3.31. Abolished ZTKDef and ZTKDefReg* operations. [zeda_ztk]
2021. 3.31. Modified makefile to separately make and install library and applications. [makefile]
2021. 3.16. Added zAllocZero. [zeda_misc]
2021. 3.16. Modified ZTKParse to detect keys by post-checking. [zeda_ztk]
2021. 3.16. Added zFPostCheckKey. [zeda_string]
2021. 3.16. Added zSetTagIdent, zResetTagIdent, zSetKeyIdent and zResetKeyIdent. [zeda_string]
2021. 3.16. Modified zFSkipComment and zFToken. [zeda_string]
2021. 2.19. Added zFileSize. [zeda_misc]
2020.11.14. Added zHeapClass and zHeapClassMethod. [zeda_heap]
2020. 9. 8. Modified zOptionRead to accept the null pointer for a list of argument. [zeda_option]
2020. 8. 2. Modified specification of zIndexAlloc and reimplemented zIndexCreate. [zeda_index]
2020. 6.18. Reimplemented zStrClone. [zeda_string]
2020. 6.18. Added zClone. [zeda_misc]
2020. 5.17. Added -D option in zeda-config-gen. [app]
2020. 4.26. Added INT_MAX and UINT_MAX. [zeda_defs]
2020. 4.25. Added zIntList and zIntListCell classes. [zeda_list, example]
2020. 4. 1. Added fread/fwrite_word/dword_rev with a macro ZEDA_BINFILE_DEF_FREAD/FWRITE_REV_TYPE. [zeda_binfile]
2020. 4. 1. Added fread/fwrite_word/dword with a macro ZEDA_BINFILE_DEF_FREAD/FWRITE_TYPE. [zeda_binfile]
2020. 4. 1. Reimplemented fread/fwrite_float/double_rev with a macro ZEDA_BINFILE_DEF_FREAD/FWRITE_REV_TYPE. [zeda_binfile]
2020. 4. 1. Reimplemented fread/fwrite_byte/float/double with a macro ZEDA_BINFILE_DEF_FREAD/FWRITE_TYPE. [zeda_binfile]
2020. 4. 1. Defined dword and udword. [zeda_defs]
2020. 4. 1. Redefined fread/fwrite_byte/float/double and added fread/fwrite_float/double_rev. [zeda_binfile]
2020. 4. 1. Defined fread_int* and fwrite_int* family with a macro ZEDA_BINFILE_DEF_FREAD/FWRITE. [zeda_binfile]
2020. 3.28. Modified .ztk files in examples to be ready for respecification of ZTK format. [example]
2019.11.21. Rewrote README and README.ZTK conforming to markdown format. [README, README.ZTK]
2019.11.16. Added zRandMTDefault. [zeda_rand]
2019.11.16. Corrected misspelling in ZEDA_WARN_INT_SHRTSIZ and ZEDA_WARN_LNG_SHRTSIZ. [zeda_errmsg]
2019.11.16. Moved zRandMT from ZM and reimplemented zRandInit, zRandI, zRandF, zRandN and zRandNU as macros with the default MT. [zeda_rand]
2019.10. 5. Renamed zMax, zMin and zLimit to _zMax, _zMin and _zLimit, and redefined zMax, zMin and zLimit as functions. [zeda_misc, zeda_string]
2019.10. 5. Added zStrCatPrint. [zeda_string]
2019.10. 5. Modified _zFileStackNew to use zStrCopy instead of strncpy. [zeda_ztk]
2019.10. 4. Debugged ZTKParse. [zeda_ztk]
2019.10. 3. Debugged ZTKParse. [zeda_ztk]
2019.10. 3. Renamed ZTKParseTag to _ZTKParseTag. [zeda_ztk]
2019.10. 2. Modified makefile in app directory. [app]
2019.10. 1. Enabled make uninstall. [makefile]
2019. 9.25. Added itoa_ordinal. [zeda_misc]
2019. 9.23. Renamed zRingNum to zRingSize. [zeda_ring]
2019. 9.23. Renamed num member of an automatically generated list class to size and zList*Num to zList*Size. [zeda_list]
2019. 9.20. Created a sample code of how to use ZTK parser. [example]
2019. 9.19. Renamed encode and fprintf members in ZTKPrp to _eval and _fprint, respectively. [zeda_ztk]
2019. 9.18. Modified ZTKParse to accept a tagless key field. [zeda_ztk]
2019. 9.18. Added ZTKParseTag and ZTKDefRegKey. [zeda_ztk]
2019. 9.18. Modified zFToken to automatically skip comments. [zeda_string]
2019. 9.18. Modified zTagFScan and zFieldFScan along with the abolishment of zFSkipDefaultComment. [zeda_string]
2019. 9.18. Modified specification of zFSkipComment and abolished zFSkipDefaultComment. [zeda_string]
2019. 9.18. Added zSetCommentIdent and zResetCommentIdent. [zeda_string]
2019. 9.17. Added ZTKValPtr. [zeda_ztk]
2019. 9.13. Modified ZTKParse to accept null key list. [zeda_ztk]
2019. 9.12. Added ZTKDefRegTag to accept null key list. [zeda_ztk]
2019. 8.12. Corrected zeda_array to include zeda_name.h. [zeda_array]
2019. 7.28. Modified defs_test. [test]
2019. 7.28. Renamed zNameDestroy to zNameFree. [zeda_name]
2019. 7.26. Renamed zBoolExpr to zBoolStr. [zeda_defs, zeda_option]
2019. 7. 8. Modified _zFileStackNew. [zeda_ztk]
2019. 7. 8. Added ZTKPrp class and call-back functions. [zeda_ztk]
2019. 7. 6. Renamed zIndentF to zFIndent. [zeda_string]
2019. 7. 4. Reimplemented ZTKDefListReg. [zeda_ztk]
2019. 7. 4. Added ZTKDefListFindAndAddTag, ZTKDefListRegOne and ZTKDefRegOne. [zeda_ztk]
2019. 7. 4. Reimplemented ZTKDefFindKey as a function. [zeda_option, zeda_ztk]
2019. 7. 4. Added zStrListFindAndAdd. [zeda_strlist]
2019. 7. 4. Renamed zStrListInsert and zStrListFindStr to zStrListAdd and zStrListFind. [zeda_strlist]
2019. 7. 4. Reimplemented ZTKKeyRewind and ZTKTagRewind. [zeda_ztk]
2019. 7. 4. Added ZTKValCmp, ZTKKeyCmp and ZTKTagCmp. [zeda_ztk]
2019. 7. 4. Added ZTKInt and ZTKDouble. [zeda_ztk]
2019. 7. 4. Reimplemented ZTKVal, ZTKValRewind, ZTKValNext, ZTKKey, ZTKKeyRewind, ZTKKeyNext, ZTKTag, ZTKTagRewind and ZTKTagNext, and modified ZTKFPrint. [zeda_ztk]
2019. 7. 3. Modified ZTKFPrint. [zeda_ztk]
2019. 7. 2. Added ZTKCountTag and ZTKCountKey. [zeda_ztk]
2019. 7. 2. Added ZTK class and ZTK parser. [zeda_ztk]
2019. 7. 1. Added zStrListFindStr. [zeda_strlist]
2019. 6.28. Reflected new specification of zStrListInsert and zStrAddrListInsert in zOptionRead. [zeda_option]
2019. 6.28. Added zStrAddrList class. [zeda_strlist]
2019. 6.28. Modified specifications of zStrListInsert, zStrListCellFree and zStrListDestroy. [zeda_strlist]
2019. 6.18. Debugged zArrayAdd. [zeda_array]
2019. 6.18. Reimplemented zIndexPosIsValid and zIndexSetElem. [zeda_index]
2019. 6.18. Modified zArrayAlloc. [zeda_array]
2019. 6.18. Modified zArraySetElem. [zeda_array]
2019. 6.17. Renamed zIndexClear to zIndexZero. [zeda_index]
2019. 6.14. Corrected dox.conf. [doc]
2019. 6.13. Renamed zTagFRead and zFieldFRead to zTagFScan and zFieldFScan. [zeda_string]
2019. 6.12. Renamed zStrListFWrite to zStrListFPrint. [zeda_strlist]
2019. 6.12. Renamed zList*Write to zList*Print. [zeda_list]
2019. 6.12. Renamed zIndex*Read and zIndex*Write to zIndex*Scan and zIndex*Print. [zeda_index]
2019. 6.10. Added zeda_binfile and abolished zeda_bfile. [zeda_binfile]
2019. 5.21. Added endian_check. [zeda_bit]
2019. 5.21. Reimplemented endian_reverse16, endian_reverse32 and endian_reverse64. [zeda_bit]
2019. 5.15. Debugged zFileHeaderCalcHeaderSize. [zeda_bfile]
2019. 1.16. Created zeda_errmsg.h. [zeda_errmsg, zeda_misc, zeda_bit, zeda_string, zeda_option]
2019. 1.16. Added ZEDA_ZTK_SUFFIX and zOpenZTKFile. [zeda_string]
2019. 1.16. Reimplemented zCutNL. [zeda_string]
2019. 1.10. Debugged zeda-chkdep. [app]
2019. 1. 4. Modified zArray2SetElem. [zeda_array]
2019. 1. 4. Added zArray2Size. [zeda_array]
2018.12.25. Added zIndexPosIsValid, zIndexElemNC and zIndexSetElemNC. Modified specifications of zIndexElem and zIndexSetElem. [zeda_index]
2018.12.25. Added zArray2Class. [zeda_array]
2018.12.25. Renamed zArrayNum to zArraySize. [zeda_array, zeda_index]
2018.12.12. Modified zNameFind in order to avoid a warning that the address of 'array' will always evaluate as true. [zeda_name]
2018.12.12. Added zStrSearchKMP and zStrSearchBM. [zeda_string]
2018.12.12. Renamed from CURE to ZEDA. [all]
2018.11.16. Debugged definitions of int32_t and uint64_t. [cure_defs]
2018.10.23. Modified zCopy. [cure_misc]
2018.10.18. Added zIndexIsEqual. [cure_index]
2018.10.18. Added zIndexSetList. [cure_index]
2018.10.18. Modified zArrayInsert. [cure_array]
2018.10.18. Moved zQuickSort from cure_list to cure_array. [cure_list, cure_array]
2018.10.18. Added _zArrayElem and _zArraySetElem, and modified specification of zArrayElem. [cure_array]
2018.10.18. Included cure_bit.h in cure.h. [cure]
2018.10.18. Modified types of endian_reverse16, endian_reverse32 and endian_reverse64. [cure_bit]
2018.10.18. Created automatic testing system. [test]
2018.10.18. Added zAssert. [cure_misc]
2018. 7. 9. Added cure_bfile. (by Naoki Wakisaka) [cure_bfile]
2015.10.21. Debugged zQuickSort. [cure_list]
2015. 8.12. Abolished ZSYSERROR. [cure_misc]
2015. 8.12. Modified ZECHO to check __cure_echo flag and reimplemented ZRUNERROR and ZRUNWARN. [cure_misc]
2015. 5. 3. Debugged _zOptionFindKey and _zOptionFindLongKey. [cure_option]
2015. 5. 3. Modified zOptionRead. [cure_option]
2015. 5. 3. Modified zStrListInsert to choose if it clones the given string. [cure_strlist]
2015. 4.28. Added zCopy. [cure_misc]
2015. 4.11. Added zListToHead and zListToTail. [cure_list]
2015. 4.11. Modified zOptionRead so as to store unrecognized command line arguments into a list of strings. [cure_option]
2015. 4.11. Added zStrList class. [cure_strlist]
2015. 3.26. Added zTagFRead and zFieldFRead. [cure_string]
2015. 3.25. Added zListMove (thanks to Ken'ya Tanaka) [cure_list]
2015. 2.16. Redefined byte, ubyte, word and uword. [cure_defs]
2015. 2.16. Defined uint8_t, uint16_t, uint32_t, uint64_t, int8_t, int16_t
  int32_t and int64_t. [cure_defs]
2015. 2.14. Added zReplaceSuffix. [cure_string]
2015. 2.14. Added zStrCat and zStrCopyNC. [cure_string]
2015. 2.14. Modified zGetBasename. [cure_string]
2015. 2.14. Modified zStrCopy to specify the buffer size. [cure_string]
2015. 2. 9. Added cure-config-gen. [app]
2015. 1. 7. Added cure-config. [app]
2014. 1.10. Reimplemented zRRTabClass and defined zRRBool. [cure_rrtab]
2013.12.11. Modified zOptionRead to return a boolean. [cure_option]
2012. 4.12. Added zStrInsChar, zStrOvrChar, zStrDelChar and zStrBSChar. [cure_string]
2012. 4.12. Modified zStrAddChar to require the size of a buffer. [cure_string]
2010.12. 9. Added zNullStr. [cure_string]
2010.12. 7. Added zFSkipIncludedChar and zSSkipIncludedChar. [cure_string]
2010.12. 6. Added zStrCopy to allow to copy a string to an overlapped area. [cure_string]
2010.12. 5. Debuged _zFFractToken and _zSFractToken. [cure_string]
2010. 9.12. Added zArrayInsert and zArrayDelete. [cure_array]
2010. 9. 2. Added zListSwap and modified zListItem. [cure_list]
2010. 7.22. Added zBound. [cure_misc]
2010. 3.16. Renamed zIndexDestroy to zIndexFree. [cure_index]
2010. 3.16. Renamed zArrayCreate and zArrayDestroy to zArrayAlloc and zArrayFree, respectively. [cure_array]
2010. 1.13. Modified zArrayClass for C++ implementation. [cure_array]
2009.12. 4. Added cure_compat. [cure_defs, cure_compat, cure_misc]
2009.11.12. Treated zNameFind and zFSkipComment. [cure_name, cure_string]
2009.11. 4. Modified type specification of zOption. [cure_option]
2009. 1.15. Redefined __EXPORT and __FASTCALL for GCC later than 3.3. [cure_defs, all]
2008.10.21. Conformed to C99 __VA_ARGS__ macro for variable arguments. [cure_misc]
2008. 7.30. Abandoned calling strdup instead of zStrClone. [cure_string]
2008. 4.26. Added zListAppendA and zListAppendZ. Redefined zListAppend as an alias to zListAppendZ. [cure_list]
2008. 4.26. Debugged zListAppend. [cure_list]
2008. 4.21. Modified zListCellFWrite. [cure_list]
2008. 3.21. Modified ZALLOCERROR. [cure_misc]
2008. 3.21. Added zEchoOn and zEchoOff. [cure_misc]
2007.11.29. Modified zOptionRead for options without argument. [cure_option]
2007.11.21. Abolished zStaticList class. [cure_list]
2007.11.21. Abolished zStack/zQueue alias except zStackPush/Pop and zQueueEnqueue/Dequeue. [cure_list]
2007.11.21. Reimplemented eprintf as a macro. [cure_misc]
2007.11.21. Abolished zListItemIsValid, zListItemIsAnterior and zListItemIsPosterior. [cure_list]
2007.11.19. Reimplemented zParseIntRange. [cure_option]
2007.11.18. Abolished zWriteTag family. [cure_string]
2007.11.18. Modified z*Token to specify the token buffer size for safety. [cure_string]
2007.11.17. Modified zFInt, zSInt, zFDouble and zSDouble to be thread-safe. [cure_string]
2007.11.17. Abolished zStrIsNum. [cure_string]
2007.11.17. Changed zFString and zSString to static functions. [cure_string]
2007.11.15. Modified tokenization function names. [cure_string]
2007.11.12. Modified a specification of zStream. [cure_stream]
2007.11.10. Removed HUGE_VAL and NAN. [cure_defs, cure_misc]
2007.10.22. Separated cure_defs from cure_misc. [cure_defs, cure_misc]
2007.10.13. Reimplemented list quick sort. Defined zListQuickSortDef. [cure_list]
2007.10.13. Redefined zListCellSwap. [cure_list]
2007. 7. 2. Debugged zOptionRead to avoid null pointer assignment. [cure_option]
2007. 3.10. Treated cure_index. [cure_index]
2007. 3.10. Separated cure_ring and cure_rrtab from cure_array. [cure_array, cure_ring, cure_rrtab]
2007. 2.10. Reimplemented zOption. [cure_option]
2007. 1.17. Separate cure_rand module from cure_misc. [cure_rand, cure_misc]
2007. 1. 7. Added atox_c and atox. [cure_misc]
2006.10.11. Defined HUGE_VAL for non-C99 environment. [cure_misc]
2006. 9. 1. Treated uint and ulong for NetBSD environment. [cure_misc]
2006. 8.26. Added zRRTab class. [cure_array]
2006. 8.21. Added zSwap and applied it. [cure_misc, cure_index, cure_list]
2006. 8.21. Removed linux module miscellenies to LIW. [cure_misc]
2006. 7.25. Renamed *IncrementNum and *DecrementNum to *IncNum and
            *DecNum, respectively. [cure_list]
2006. 5.19. Renamed zIntRand to zRandI and zDoubleRand to zRandF. [cure_misc]
2006. 4.27. Debugged zArrayCreate. [cure_array]
2006. 3.29. Added zIndexAlloc and zIndexFree. [cure_index]
2006. 3.29. Treated. [cure_array, cure_index, cure_string]
2006. 3.29. Renamed zMemAlloc to zAlloc. [cure_misc]
2006. 3.13. Treated. [cure_index]
2006. 3.13. Added zArraySetNum and zArraySetBuf. [cure_array]
2006. 3. 2. Added zArrayNeck and zIndexNeck. [cure_array, cure_index]
2006. 3. 1. Modified specification of quicksort family. [cure_list]
2006. 3. 1. Added zIndexHead, zIndexTail and zIndexMove. [cure_index]
2006. 3. 1. Renamed zArrayLastElem to zArrayHead and added
            zArrayTail. [cure_array]
2006. 3. 1. Added zArrayPosIsValid. [cure_array]
2006. 2. 1. Treated temporary variable in zListDestroy
            to be initialized. [cure_list]
2006. 1. 8. Added zRingClass. [cure_array]
2006. 1. 8. Renamed zIndexHead to zIndexBuf. [cure_index]
2006. 1. 8. Renamed zArrayHead to zArrayBuf. [cure_array]
2006. 1. 7. Added __BEGIN_DECLS and __END_DECLS macros.
            (might be already defined in sys/cdefs.h) [cure_misc]
2005.12.13. Renamed from ZBL to CURE.
2001. 8. 7. ver.0.0.1. Began development ZBL.
1998.12.22. Created.
